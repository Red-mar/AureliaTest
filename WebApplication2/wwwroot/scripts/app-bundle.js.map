{"version":3,"sources":["src/app.ts","src/environment.ts","src/hello.ts","src/main.ts","src/todo.ts","src/resources/index.ts"],"names":[],"mappings":";;;IAGA;QAAA;YACI,YAAO,GAAG,OAAO,CAAC;YAClB,UAAK,GAAW,EAAE,CAAC;YACnB,oBAAe,GAAG,EAAE,CAAC;YACrB,YAAO,GAAG,cAAc,CAAC;YAEzB,UAAK,GAAU,IAAI,aAAK,EAAE,CAAC;QAmB/B,CAAC;QAjBG,qBAAO,GAAP;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,WAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBAChD,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC9B,CAAC;QACL,CAAC;QAED,wBAAU,GAAV,UAAW,IAAI;YACX,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACrC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAChC,CAAC;QACL,CAAC;QAED,sBAAQ,GAAR;YACI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC;QACL,UAAC;IAAD,CAzBA,AAyBC,IAAA;IAzBY,kBAAG;;;;;;;;ICHhB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;;;ICHF;QAAA;YACI,cAAS,GAAW,MAAM,CAAC;YAC3B,aAAQ,GAAW,KAAK,CAAA;QAK5B,CAAC;QAHG,wBAAQ,GAAR;YACI,KAAK,CAAC,WAAS,IAAI,CAAC,SAAS,SAAI,IAAI,CAAC,QAAQ,uBAAoB,CAAC,CAAC;QACxE,CAAC;QACL,YAAC;IAAD,CAPA,AAOC,IAAA;IAPY,sBAAK;;;;;;;;ICGlB,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;;;;ICjBD;QAGI,cAAmB,WAAmB;YAAnB,gBAAW,GAAX,WAAW,CAAQ;YAFtC,SAAI,GAAG,KAAK,CAAC;QAE4B,CAAC;QAC9C,WAAC;IAAD,CAJA,AAIC,IAAA;IAJY,oBAAI;;;;;;;;ICEjB,mBAA0B,MAA8B;IAExD,CAAC;IAFD,8BAEC","file":"app-bundle.js","sourcesContent":["import { Hello } from './hello';\nimport { Todo } from './todo';\n\nexport class App {\n    heading = 'Todos';\n    todos: Todo[] = [];\n    todoDescription = '';\n    message = 'Hello World!';\n\n    hello: Hello = new Hello();\n\n    addTodo() {\n        if (this.todoDescription) {\n            this.todos.push(new Todo(this.todoDescription));\n            this.todoDescription = '';\r\n        }\r\n    }\n\n    removeTodo(todo) {\n        let index = this.todos.indexOf(todo);\n        if (index !== -1) {\n            this.todos.splice(index, 1);\r\n        }\r\n    }\n\n    sayHello() {\n        this.hello.sayHello();\r\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","export class Hello {\n    firstName: string = 'John';\n    lastName: string = 'Doe'\n\n    sayHello() {\n        alert(`Hello ${this.firstName} ${this.lastName}. Nice to meet you`);\r\n    }\r\n}","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class Todo {\n    done = false;\n\n    constructor(public description: string){ }\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../.."}